---
- name: Verify we are in correct working directory when running playbook
  hosts: localhost

  tasks:
    - name: Ensure we are running playbook.yml from ~/dotfiles directory
      fail:
        msg: "Current working directory is: {{ lookup('env', 'PWD') }} (make sure you are running the playbook.yml from {{ lookup('env', 'HOME') }}/dotfiles)"
      when: lookup('env', 'PWD') != lookup('env', 'HOME') + '/dotfiles'

- name: Install homebrew taps
  hosts: localhost

  tasks:
    - name: Ensure homebrew taps are installed
      homebrew_tap:
        name: "{{ item }}"
        state: present
      with_items:
        - homebrew/cask-fonts

- name: Install homebrew packages
  hosts: localhost

  tasks:
    - name: Ensure homebrew packages are installed
      homebrew:
        update_homebrew: true
        name: "{{ item }}"
        state: present
      with_items:
        - git
        - zsh
        - zsh-syntax-highlighting
        - zsh-autosuggestions
        - bat
        - tree
        - tldr
        - ansible
        - shellcheck
        - vim
        - nvim
        - starship
        - mas
        - fzf
        - nvm
        - git-sizer

- name: Install homebrew casks
  hosts: localhost

  tasks:
    - name: Ensure homebrew casks are installed
      homebrew_cask:
        update_homebrew: true
        name: "{{ item }}"
        state: present
      with_items:
        - visual-studio-code
        - google-chrome
        - iterm2
        - spotify
        - font-cascadia-code-pl
        - 1password
        - parallels
        - slack
        - textexpander
        - grammarly

- name: Install store applications
  hosts: localhost

  tasks:
    - name: Ensure app store applications are installed
      mas:
        id:
          - 904280696 # Things
          #- 497799835 # Xcode
        state: present
        upgrade_all: yes
      environment:
        PATH: /opt/homebrew/bin:{{ ansible_facts.env.PATH }}
      ignore_errors: true

- name: Setup projects folder
  hosts: localhost

  tasks:
    - name: Ensure ~/projects/gitlab directory exists
      file:
        path: ~/projects/gitlab
        state: directory
        mode: "0755"

    - name: Ensure ~/projects/github directory exists
      file:
        path: ~/projects/github
        state: directory
        mode: "0755"

- name: Setup zsh
  hosts: localhost

  tasks:
    - name: Ensure .zprofile copied to ~/.zprofile
      copy:
        src: ./assets/zsh/.zprofile
        dest: ~/.zprofile

    - name: Ensure .zshrc copied to ~/.zshrc
      copy:
        src: ./assets/zsh/.zshrc
        dest: ~/.zshrc

- name: Setup git
  hosts: localhost
  tags:
    - git
  tasks:
    - name: Ensure .gitconfig copied to ~/.gitconfig
      copy:
        src: ./assets/git/.gitconfig
        dest: ~/.gitconfig

    - name: Ensure .gitcommit copied to ~/.gitcommit
      copy:
        src: ./assets/git/.gitcommit
        dest: ~/.gitcommit

    - name: Ensure .gitignore_global copied to ~/.gitignore_global
      copy:
        src: ./assets/git/.gitignore_global
        dest: ~/.gitignore_global

- name: Setup nvim
  hosts: localhost

  tasks:
    - name: Ensure init.vim copied to ~/init.vim
      copy:
        src: ./assets/nvim/init.vim
        dest: ~/init.vim

- name: Setup starship
  hosts: localhost

  tasks:
    - name: Ensure ~/.config/starship directory exists
      file:
        path: ~/.config/starship
        state: directory
        mode: "0755"

    - name: Ensure starship.toml copied to ~/.config/starship/starship.toml
      copy:
        src: ./assets/starship/starship.toml
        dest: ~/.config/starship/starship.toml

- name: Setup iterm2
  hosts: localhost

  tasks:
    - name: Ensure iterm2 custom preference folder points to ~/dotfiles/assets/iterm2
      osx_defaults:
        domain: com.googlecode.iterm2
        key: PrefsCustomFolder
        type: string
        value: ~/dotfiles/assets/iterm2

    - name: Ensure iterm2 loads preferences from custom folder
      osx_defaults:
        domain: com.googlecode.iterm2
        key: LoadPrefsFromCustomFolder
        type: int
        value: 2

- name: Setup fzf
  hosts: localhost

  tasks:
    - name: Ensure fzf key bindings and fuzzy completion are installed
      shell: $(brew --prefix)/opt/fzf/install

- name: Setup nvm
  hosts: localhost

  tasks:
    - name: Ensure ~/.nvm directory exists
      file:
        path: ~/.nvm
        state: directory
        mode: "0755"

- name: Setup dock
  hosts: localhost

  tasks:
    - name: Ensure dock is set to hide and show
      osx_defaults:
        domain: com.apple.dock
        key: autohide
        type: bool
        value: true

    - name: Ensure unwanted applications are removed from dock
      shell: defaults delete com.apple.dock persistent-apps
      ignore_errors: true

    - name: Ensure wanted applications are added to dock
      shell: >-
        defaults write com.apple.dock persistent-apps -array-add\
          "<dict>\
            <key>tile-data</key>\
            <dict>\
              <key>file-data</key>\
              <dict>\
                <key>_CFURLString</key>\
                <string>{{ item }}</string>\
                <key>_CFURLStringType</key>\
                <integer>15</integer>\
              </dict>\
            </dict>\
          </dict>"
      with_items:
        - file:///System/Applications/Mail.app/
        - file:///Applications/iTerm.app/
        - file:///Applications/Visual%20Studio%20Code.app/
        - file:///Applications/Google%20Chrome.app/
        - file:///Applications/Spotify.app/
        - file:///Applications/Things3.app/
        - file:///Applications/1Password%207.app/
        - file:///Applications/Slack.app/

    - name: Ensure dock is restarted
      shell: killall Dock
